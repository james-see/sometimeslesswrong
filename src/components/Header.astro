---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<header>
	<nav>
		<h2><a href="/">{SITE_TITLE}</a></h2>
		<div class="hamburger">☰</div>
		<div class="menu-container">
			<div class="internal-links">
				<HeaderLink href="/blog">Blog</HeaderLink>
			</div>
			<div class="social-links">
				<a href="https://twitter.com/jc50000000" target="_blank">
					<span class="sr-only">Follow James on Twitter</span>
					<svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32"
						><path
							fill="currentColor"
							d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"
						></path></svg
					>
				</a>
				<a href="https://github.com/james-see" target="_blank">
					<span class="sr-only">Go to James's GitHub</span>
					<svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32"
						><path
							fill="currentColor"
							d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
						></path></svg
					>
				</a>
			</div>
		</div>
	</nav>
</header>
<style>
	header {
		margin: 0;
		padding: 0 1em;
		background: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
	}
	h2 {
		margin: 0;
		font-size: 1em;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
	}
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
    	position: relative;
	}
	nav a {
		padding: 1em 0.5em;
		color: var(--black);
		border-bottom: 4px solid transparent;
		text-decoration: none;
	}
	nav a.active {
		text-decoration: none;
		border-bottom-color: var(--accent);
	}
	.social-links, .social-links a {
		display: flex;
	}
	.hamburger {
		display: none;
	}
.menu-container {
    display: flex; /* This makes it a flex container */
    flex-direction: row; /* This aligns children (internal-links and social-links) in a row */
    align-items: center; /* This vertically centers the items in the container */
    justify-content: space-between; /* This spreads the items to occupy the available space */
}
	@media (max-width: 720px) {
		.internal-links, .social-links {
			display: none; /* Initially hidden */
			flex-direction: column; /* Stack links vertically */
			align-items: center; /* Center align the links */
			padding: 0; /* Adjust padding as needed */
		}
		.hamburger {
			display: block;
			cursor: pointer;
			/* Additional styling here */
			font-size: 2em; /* Example styling */
			margin: 0 10px; /* Example styling */
		}
		.menu-container {
        display: none; /* Hidden initially on mobile */
        flex-direction: column;
        align-items: center;
        /* Ensure it's positioned correctly */
        position: absolute;
        top: 100%; /* Adjust based on your navbar's height */
        left: 0;
        width: 100%;
        z-index: 1000;
    }
	}

.internal-links, .social-links {
    display: flex; /* or block, depending on your design */
}


</style>
<script>
    document.querySelector('.hamburger').addEventListener('click', function() {
        const menuContainer = document.querySelector('.menu-container') as HTMLDivElement;
        const canvas = document.getElementById('trailCanvas') as HTMLCanvasElement; // Ensure your canvas has this ID

        // Toggle display between 'block' and 'none'
        const isMenuVisible = menuContainer.style.display === 'block';
        menuContainer.style.display = isMenuVisible ? 'none' : 'block';
        
        // Toggle icon from hamburger to X
        document.querySelector('.hamburger').innerHTML = isMenuVisible ? '☰' : '✕';

        // Adjust canvas margin if the menu is now visible
        if (!isMenuVisible) {
            // Wait for the menu to be visible to calculate its height correctly
            setTimeout(() => {
                const menuHeight = menuContainer.offsetHeight;
                canvas.style.marginTop = `${menuHeight}px`;
            }, 0);
        } else {
            canvas.style.marginTop = '0'; // Reset margin when menu is hidden
        }
    });
</script>
